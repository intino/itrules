defrule type(Class)
    public class [$static ][$final ]$name [extends $superclass ][implements $interface...[, ] ]{

        $attribute+Const...[$NL]\
        $attribute+Field...[$NL]\

        public $name($attribute+Injection...[, ]) {
            $attribute+Initialize...[$NL]\
        }

        $attribute+Getter...[$NL]\

        $attribute+Setter...[$NL]\

    }
endrule

defrule type(Attribute) type(Const) trigger(Const)
    public static final $type $name[ = $default];
endrule

defrule type(Attribute) !type(Const) type(ReadOnly) trigger(Field)
    private final $type $name[ = $default];
endrule

defrule type(Attribute) !type(Const) !type(ReadOnly) trigger(Field)
    private $type $name[ = $default];
endrule

defrule type(Attribute) !type(Const) trigger(Getter)
    public $type get$name+firstUpperCase() {
        return $name;
    }

endrule

defrule type(Attribute) !type(Const) !type(ReadOnly) trigger(Setter)
    public void set$name+firstUpperCase($type value) {
        $name = value;
    }

endrule

defrule type(Attribute) !type(Const) type(ReadOnly) trigger(Injection)
    $type $name
endrule

defrule type(Attribute) !type(Const) type(ReadOnly) trigger(Initialize)
    this.$name = $name;
endrule
